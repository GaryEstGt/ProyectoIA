/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyectoia;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.util.List;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author garya
 */
public class Principal extends javax.swing.JFrame {

    public static ArrayList<Pelicula> peliculas;
    public static List<Pelicula> resultado;
    public static DefaultTableModel modelo;
    /**
     * 
     * Creates new form Principal
     */
    public Principal(){
        this.peliculas = new ArrayList<Pelicula>();
        initComponents();
        cb_Campos.addItem("Titulo");
        cb_Campos.addItem("Director");
        cb_Campos.addItem("Color");
        cb_Campos.addItem("Actor");
        cb_Campos.addItem("Lenguaje");
        cb_Campos.addItem("Pais");
        cb_Campos.addItem("Año");
        cb_Campos.addItem("Genero");
        leerCSV();
        LlenarTabla(peliculas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tb_Pelis = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cb_Campos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Buscar = new javax.swing.JTextField();
        bnt_Buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb_Pelis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tb_Pelis);

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel2.setText("Bienvenido");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Buscar Peliculas");

        cb_Campos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_CamposActionPerformed(evt);
            }
        });

        jLabel3.setText("Buscar por campo:");

        jLabel4.setText("Búsqueda");

        bnt_Buscar.setText("Buscar");
        bnt_Buscar.setActionCommand("btn_Buscar");
        bnt_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_BuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_Campos, 0, 116, Short.MAX_VALUE)
                            .addComponent(txt_Buscar))
                        .addGap(18, 18, 18)
                        .addComponent(bnt_Buscar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bnt_Buscar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_Campos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_CamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_CamposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_CamposActionPerformed

    private void bnt_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_BuscarActionPerformed
        // TODO add your handling code here:
        realizarBusqueda(txt_Buscar.getText());
    }//GEN-LAST:event_bnt_BuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    public static void leerCSV(){
        try {
            CSVReader reader = new CSVReader(new FileReader("C:\\Users\\garya\\Desktop\\ProyectoIA\\ProyectoIA\\src\\main\\java\\com\\mycompany\\proyectoia\\datos2.csv"));
            String [] nextLine;
            int cont=0;
            while ((nextLine = reader.readNext()) != null) {
                // nextLine[] is an array of values from the line
                cont++;
                System.out.println(cont);
                Pelicula peli= new Pelicula(nextLine[0],nextLine[1],nextLine[2],nextLine[3],nextLine[4],nextLine[5],nextLine[6],nextLine[7],Double.parseDouble(nextLine[9]));
                String[] generos=nextLine[8].split("\\|");
                for (int i = 0; i < generos.length; i++) {
                   peli.genero.add(generos[i]);
                }
                peliculas.add(peli);
            }  } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CsvValidationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void LlenarTabla(List<Pelicula>lista){
        modelo = new DefaultTableModel();
        tb_Pelis.setModel(modelo);
        modelo.addColumn("Titulo");
        modelo.addColumn("Director");
        modelo.addColumn("Color");
        modelo.addColumn("Actor");
        modelo.addColumn("Lenguaje");
        modelo.addColumn("Pais");
        modelo.addColumn("Contenido");
        modelo.addColumn("Año");
        modelo.addColumn("Genero");
        modelo.addColumn("Punteo");
        for (int i = 0; i < lista.size(); i++) {
            Object []object = new Object[10];
            object[0] = lista.get(i).getTitulo();
            object[1] = lista.get(i).getDirector(); 
            object[2] = lista.get(i).getColor(); 
            object[3] = lista.get(i).getActorPrincipal(); 
            object[4] = lista.get(i).getLenguaje(); 
            object[5] = lista.get(i).getPais(); 
            object[6] = lista.get(i).getContenido(); 
            object[7] = lista.get(i).getAño();
            object[8] = lista.get(i).getGenero();
            object[9] = lista.get(i).getScore();            
            modelo.addRow(object);
        }
    }
    public void realizarBusqueda(String criterio){
         MostrarPelicula form1;
        switch (cb_Campos.getSelectedItem().toString()) {
            case "Titulo":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getTitulo().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;
            case "Director":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getDirector().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;
            case "Actor":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getActorPrincipal().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;
            case "Año":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getAño().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break; 
             case "Color":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getColor().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;  
             case "Lenguaje":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getLenguaje().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break; 
             case "Pais":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getPais().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;   
             case "Genero":       
                resultado=peliculas.stream().filter(Pelicula->Pelicula.getGenero().equals(criterio)).collect(Collectors.toList());
                form1=new MostrarPelicula();
                form1.setVisible(true);
                break;
            default:
                throw new AssertionError();
        }
  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_Buscar;
    private javax.swing.JComboBox<String> cb_Campos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tb_Pelis;
    private javax.swing.JTextField txt_Buscar;
    // End of variables declaration//GEN-END:variables
}
